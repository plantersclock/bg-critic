{"version":3,"sources":["components/NavBar.jsx","affiliates/index.js","components/BGCard.jsx","api/index.js","pages/Top10List.jsx","pages/Top10Insert.jsx","pages/Top10Update.jsx","app/index.js","index.js"],"names":["NavBar","style","backgroundColor","height","Grid","container","item","lg","alignItems","justify","to","Component","amazon","264241","281259","271088","280480","269207","219100","274364","266192","276025","285774","BGCard","props","state","convert","bind","string","multiple","char","after","pattern","RegExp","replace","isLoaded","this","bg","order","description","amazonLink","undefined","console","log","bgg_id","Card","CardActionArea","CardMedia","component","alt","name","image","title","CardContent","zeroMinWidth","Typography","gutterBottom","variant","maxHeight","overflow","color","CardActions","Button","size","href","api","axios","create","baseURL","apis","insertTop10Item","payload","post","getAllTop10Items","get","updateTop10ItemById","id","put","deleteTop10ItemById","delete","getTop10ItemById","Top10List","componentDidMount","a","setState","isLoading","then","top10items","data","listLoaded","getTopX","topX","getBGGArray","result","structuredTop10","addBGGData","fetch","response","json","stuff","Object","assign","Promise","all","sortedTop10Items","map","items","uniqueItems","filter","index","_arr","indexOf","itemArray","uniqueItem","length","itemScore","h","rating","sort","b","score","slice","content","key","topXLoaded","width","xs","direction","sm","md","spacing","xl","Top10Insert","handleChange","e","target","value","postTop10Items","res","window","alert","handleSubmit","preventDefault","games","split","other","game","author","channel","channel_link","source","parseInt","year","onSubmit","noValidate","autoComplete","TextField","label","onChange","multiline","rows","marginTop","float","type","Top10Update","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0365231.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\n\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{backgroundColor: \"gray\", height: 80}}>\r\n                <Grid container >\r\n                    <Grid item lg={2}></Grid>\r\n                    <Grid container item lg={8}>\r\n                        <Grid container item alignItems=\"center\" justify=\"center\" lg={4}>\r\n                            <Link to=\"/top10/list\">list</Link>\r\n                        </Grid>\r\n                        <Grid container item  alignItems=\"center\" justify=\"center\" lg={4}>\r\n                            <Link to=\"/top10/create\">create</Link>\r\n                        </Grid>\r\n                        <Grid container item alignItems=\"center\" justify=\"center\" lg={4}>\r\n                            <Link to=\"/top10/update/1\">update</Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item lg={2}></Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar","export const amazon = {\r\n    264241: \"https://amzn.to/3iPNaSK\",\r\n    281259: \"https://amzn.to/38zJOOM\",\r\n    271088: \"https://amzn.to/2DlwLoL\",\r\n    280480: \"https://amzn.to/3e9y32E\",\r\n    269207: \"https://amzn.to/3ec4AoS\",\r\n    219100: \"https://amzn.to/32783mz\",\r\n    274364: \"https://amzn.to/31QZsnP\",\r\n    266192: \"https://amzn.to/3fa54NI\",\r\n    276025: \"https://amzn.to/2Z7JUdz\",\r\n    285774: \"https://amzn.to/2O3lk7f\"\r\n}\r\n","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {amazon} from '../affiliates'\r\n\r\n\r\n\r\nclass BGCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    this.convert = this.convert.bind(this);\r\n  }\r\n\r\n      convert(string) {\r\n        try{\r\n        var multiple = {\r\n        '&amp;' : '&',\r\n        '&ndash;' : '-',\r\n        '&nbsp;' : ' ',\r\n        '&mdash;' : ' - ',\r\n        '&lt;': '<',\r\n        '&gt;': '>',\r\n        '&quot;': '\"',\r\n        '&apos;': '`',\r\n        '&#10;': ' '\r\n\r\n      };\r\n      for(var char in multiple) {\r\n        var before = char;\r\n        var after= multiple[char]; \r\n        var pattern = new RegExp(before, 'g');\r\n        string = string.replace(pattern,after);    \r\n      }\r\n      return string;}\r\n      catch {\r\n        return null\r\n      }\r\n    }\r\n\r\n    render() {\r\n      let isLoaded = false\r\n      let {bg, order} = this.props\r\n      let description = \"\"\r\n      let amazonLink = undefined\r\n      \r\n      if (this.props.bg !== undefined && this.props.bg !==null){\r\n        isLoaded=true\r\n        description = bg.description\r\n        console.log(bg)\r\n\r\n\r\n        amazonLink = amazon[bg.bgg_id]\r\n\r\n        console.log (amazonLink)\r\n      }\r\n      return (\r\n        <div>\r\n          {isLoaded ? \r\n          <Card>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt={bg.name}\r\n              height=\"200\"\r\n              image={bg.image}\r\n              title={bg.name}\r\n            />\r\n\r\n\r\n            \r\n            <CardContent zeroMinWidth>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {10-order}. {bg.name}\r\n              </Typography>\r\n              <Typography style={{maxHeight: 120, overflow: \"hidden\"}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {this.convert(description)}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n\r\n          <CardActions>\r\n            {amazonLink !== undefined ?\r\n            <Button size=\"small\" color=\"primary\" href={amazonLink}>\r\n              Buy\r\n            </Button>:\r\n            <div></div>\r\n            }\r\n\r\n            <Button size=\"small\" color=\"primary\">\r\n              Learn More\r\n            </Button>\r\n          </CardActions>\r\n        </Card> :\r\n        <div></div>}\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default BGCard","\r\nimport axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3000/api',\r\n})\r\n\r\nexport const insertTop10Item = payload => api.post(`/top10`, payload)\r\nexport const getAllTop10Items = () => api.get(`/top10items`)\r\nexport const updateTop10ItemById = (id, payload) => api.put(`/top10/${id}`, payload)\r\nexport const deleteTop10ItemById = id => api.delete(`/top10/${id}`)\r\nexport const getTop10ItemById = id => api.get(`/top10/${id}`)\r\n\r\nconst apis = {\r\n    insertTop10Item,\r\n    getAllTop10Items,\r\n    updateTop10ItemById,\r\n    deleteTop10ItemById,\r\n    getTop10ItemById,\r\n}\r\n\r\nexport default apis","\r\nimport React, { Component } from 'react'\r\nimport api from '../api'\r\nimport {BGCard} from '../components'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass Top10List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            top10items: [],\r\n            listLoaded: false,\r\n            structuredTop10: [],\r\n            sortedTop10Items: [],\r\n            topX: 10\r\n\r\n        };\r\n\r\n    \r\n        this.getTopX = this.getTopX.bind(this);\r\n        this.addBGGData = this.addBGGData.bind(this);\r\n        this.getBGGArray = this.getBGGArray.bind(this);\r\n\r\n      }\r\n    \r\n      componentDidMount = async () => {\r\n        this.setState({ isLoading: true })\r\n\r\n        await api.getAllTop10Items().then(top10items => {\r\n            this.setState({\r\n                top10items: top10items.data.data,\r\n                isLoading: false,\r\n                listLoaded: true,\r\n            }, () => (this.getTopX(this.state.top10items, this.state.topX)))\r\n        })\r\n\r\n        this.getBGGArray().then(result => {\r\n          this.setState({structuredTop10: result})\r\n        })\r\n\r\n        \r\n\r\n      }\r\n    \r\n      componentDidUpdate(){\r\n    \r\n\r\n      }\r\n\r\n      addBGGData = async (item) => {\r\n        let response = await fetch(`https://bgg-json.azurewebsites.net/thing/${item.bgg_id}`);\r\n        let stuff = await response.json()\r\n        return Object.assign({}, item, stuff);\r\n      }\r\n\r\n      getBGGArray = async () => {\r\n        return Promise.all(this.state.sortedTop10Items.map(item=>this.addBGGData(item)))\r\n      }\r\n    \r\n      getTopX(items, topX){\r\n\r\n        let uniqueItems = items.map( (item) => item.bgg_id).filter( (item, index, _arr) => _arr.indexOf(item) === index);\r\n        console.log (uniqueItems)\r\n        let itemArray = uniqueItems.map(uniqueItem => {\r\n\r\n          let result = items.filter(item => item.bgg_id === uniqueItem)\r\n\r\n          if (result.length > 0){\r\n            let itemScore = 0\r\n            for (let h = 0; h < result.length; h++) {\r\n                itemScore += (11-result[h].rating)\r\n            }\r\n\r\n            return {\"bgg_id\": result[0].bgg_id,\r\n                            \"score\": itemScore}\r\n          }\r\n\r\n          return null\r\n\r\n        })\r\n\r\n        itemArray = itemArray.sort(function(a, b){return b.score - a.score})\r\n        itemArray = itemArray.slice(0,topX)\r\n        itemArray = itemArray.sort(function(a, b){return a.score - b.score})\r\n\r\n        this.setState({sortedTop10Items: itemArray})\r\n        \r\n            \r\n        return null\r\n      }\r\n\r\n    render() {\r\n        let content = this.state.structuredTop10.map(item => (<div key={item.bgg_id}>{item.name} - {item.bgg_id} - {item.score}</div>))\r\n        let topXLoaded = false\r\n        if (this.state.structuredTop10.length > 0){\r\n          topXLoaded = true\r\n        }\r\n        console.log (this.state.structuredTop10[0])\r\n        console.log (this.state.top10items)\r\n        return (\r\n            <div style={{width:\"100%\"}}>\r\n                <p>The Top 10 Board Games Are:</p> <br/>\r\n                <Grid xs={12} container justify=\"center\" direction=\"row\">\r\n                  <Grid xs= {0} sm = {0} md={1} lg={2} ></Grid>\r\n                  <Grid xs= {12} sm = {12} md={10} lg={8}  container direction=\"row\" spacing={4}  >\r\n                    {topXLoaded ? this.state.structuredTop10.map((item, index) => (\r\n                      <Grid item xs = {12} sm = {6} md={4} lg={4} xl={3}>\r\n                        <BGCard bg={item} order={index}/>\r\n                      </Grid>\r\n                    )) : <div></div>}\r\n                  </Grid>\r\n                  <Grid xs= {0} sm = {0} md={1} lg={2} ></Grid>\r\n                </Grid>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Top10List","\r\nimport React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport api from '../api'\r\n\r\nclass Top10Insert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n         \r\n        };\r\n\r\n    \r\n      }\r\n\r\n    handleChange = (e) => {\r\n        console.log (\"CHANGED\")\r\n        this.setState({ [e.target.name]: e.target.value })\r\n      }\r\n    \r\n    \r\n    postTop10Items= async (data) => {\r\n        await api.insertTop10Item(data).then(res => {\r\n            window.alert(`Items inserted successfully`)\r\n        })\r\n\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    let games = this.state.games.split(/\\r?\\n/)\r\n    \r\n    let data = games.map(item=>{\r\n        let rating = item.split('.')[0]\r\n        let other = item.split('. ')[1]\r\n        let game = other.split(' - ')[0]\r\n        let bgg_id = other.split(' - ')[1]\r\n        \r\n\r\n\r\n        let dataItem={\r\n            \"author\": this.state.author,\r\n            \"channel\": this.state.channel,\r\n            \"channel_link\": this.state.channel_link,\r\n            \"source\": this.state.source,\r\n            \"year\": parseInt(this.state.year),\r\n            \"game\": game,\r\n            \"rating\": parseInt(rating),\r\n            \"bgg_id\": parseInt(bgg_id)\r\n        }\r\n\r\n        return dataItem\r\n        \r\n    })\r\n    console.log(data)\r\n    this.postTop10Items(data)\r\n    \r\n    }\r\n\r\n    render() {\r\n        let {author, channel, channel_link, source, year, games} = this.state\r\n        return (\r\n            <form onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\r\n                <Grid item lg = {12} container>\r\n                    <Grid item lg = {1}></Grid>\r\n                    <Grid item lg = {10} container direction=\"column\">\r\n                        <TextField id=\"standard-basic\" label=\"Author\" value={author} name=\"author\" onChange={this.handleChange}/>\r\n                        <TextField id=\"standard-basic\" label=\"Channel\" value={channel} name=\"channel\" onChange={this.handleChange}/>\r\n                        <TextField id=\"standard-basic\" label=\"Channel Link\" value={channel_link} name=\"channel_link\" onChange={this.handleChange}/>\r\n                        <TextField id=\"standard-basic\" label=\"Source\" value={source} name=\"source\" onChange={this.handleChange}/>\r\n                        <TextField id=\"standard-basic\" label=\"Year\" value={year} name=\"year\" onChange={this.handleChange}/>\r\n                        <TextField id=\"standard-basic\" label=\"Games\" multiline rows={10} value={games} name=\"games\" onChange={this.handleChange}/>\r\n                        <input style= {{ marginTop: 10, float: \"right\", width: 150}} type=\"submit\" value=\"Add Itinerary Item\" />\r\n                    </Grid>\r\n                    <Grid item lg = {1}></Grid>\r\n                </Grid>\r\n                \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Top10Insert","\r\nimport React, { Component } from 'react'\r\n\r\nclass Top10Update extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>In this page you'll see the form to update the top 10s</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Top10Update","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport {NavBar} from '../components'\nimport { Top10List, Top10Insert, Top10Update } from '../pages'\n\n\nimport '../style/index.css';\n\n\n\nfunction App() {\n    return (\n\n        <Router>\n            \n            <NavBar />\n            <Switch>\n                <Route path=\"/top10/list\" exact component={Top10List} />\n                <Route path=\"/top10/create\" exact component={Top10Insert} />\n                <Route\n                    path=\"/top10/update/:id\"\n                    exact\n                    component={Top10Update}\n                />\n            </Switch>\n            \n        </Router>\n\n\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}